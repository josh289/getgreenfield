---
import Layout from '../layouts/Layout.astro';
---

<Layout
  title="The Platform - Greenfield Platform"
  description="Deep technical dive into the architecture: how bounded contexts work, event-driven architecture, pattern library, and integration with existing systems."
>
  <div class="min-h-screen bg-slate-950 text-white">
    <div class="container mx-auto px-6 py-16">
      <div class="max-w-6xl mx-auto">
        <!-- Hero Section -->
        <div class="text-center mb-16">
          <h1 class="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-purple-400 to-blue-600 bg-clip-text text-transparent">
            The Platform
          </h1>
          <p class="text-xl text-slate-300 max-w-3xl mx-auto">
            A deep technical dive into the architecture that makes 100x productivity possible
          </p>
        </div>

        <!-- Architecture Overview -->
        <section class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-purple-400">Architecture Overview</h2>
          <div class="bg-slate-900 rounded-lg p-8 mb-8">
            <div class="grid md:grid-cols-2 gap-8">
              <div>
                <h3 class="text-2xl font-semibold mb-4 text-blue-400">Core Principles</h3>
                <ul class="space-y-3 text-slate-300">
                  <li class="flex items-start">
                    <span class="text-purple-400 mr-3">→</span>
                    <span>Bounded contexts for cognitive simplicity</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-purple-400 mr-3">→</span>
                    <span>Event-driven communication</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-purple-400 mr-3">→</span>
                    <span>Pattern-based development</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-purple-400 mr-3">→</span>
                    <span>Zero-config deployment</span>
                  </li>
                </ul>
              </div>
              <div>
                <h3 class="text-2xl font-semibold mb-4 text-green-400">Key Benefits</h3>
                <ul class="space-y-3 text-slate-300">
                  <li class="flex items-start">
                    <span class="text-green-400 mr-3">✓</span>
                    <span>Perfect isolation between domains</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-3">✓</span>
                    <span>Automatic scaling and reliability</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-3">✓</span>
                    <span>Instant developer onboarding</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-3">✓</span>
                    <span>Seamless legacy integration</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </section>

        <!-- Business Services (Actors) Deep Dive -->
        <section class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-blue-400">Business Services (Actors) Explained</h2>
          <div class="space-y-8">
            <div class="bg-slate-900 rounded-lg p-8">
              <h3 class="text-2xl font-semibold mb-4 text-blue-400">Self-Contained Business Domains</h3>
              <p class="text-slate-300 text-lg leading-relaxed mb-6">
                Each Business Service (Actor) is a microservice that encapsulates a complete business domain.
                Three simple handler types - Commands, Queries, Events. That's all you write.
              </p>
              <div class="grid md:grid-cols-3 gap-6">
                <div class="bg-slate-800 rounded-lg p-6">
                  <h4 class="text-lg font-semibold mb-3 text-purple-400">Command Handlers</h4>
                  <p class="text-slate-400">
                    Change state. Validate rules. Emit events. Handle CreateUser, UpdateOrder, ProcessPayment.
                  </p>
                </div>
                <div class="bg-slate-800 rounded-lg p-6">
                  <h4 class="text-lg font-semibold mb-3 text-yellow-400">Query Handlers</h4>
                  <p class="text-slate-400">
                    Read data. Never modify. GetUser, ListOrders, CalculateTotals. Optimized for reads.
                  </p>
                </div>
                <div class="bg-slate-800 rounded-lg p-6">
                  <h4 class="text-lg font-semibold mb-3 text-green-400">Event Handlers</h4>
                  <p class="text-slate-400">
                    React to changes. UserCreated triggers welcome email. OrderPlaced updates inventory.
                  </p>
                </div>
              </div>
            </div>

            <div class="bg-slate-900 rounded-lg p-8">
              <h3 class="text-2xl font-semibold mb-4 text-green-400">What You Write vs What Platform Handles</h3>
              <div class="grid md:grid-cols-2 gap-8 mb-8">
                <div>
                  <h4 class="text-lg font-semibold mb-3 text-blue-400">You Write (Simple Handler Functions)</h4>
                  <div class="bg-slate-800 rounded p-4">
                    <code class="text-green-400 text-sm">
                      async handle(cmd: CreateUser) &#123;<br/>
                      &nbsp;&nbsp;// Validate input<br/>
                      &nbsp;&nbsp;// Apply business rules<br/>
                      &nbsp;&nbsp;// Return result<br/>
                      &#125;
                    </code>
                  </div>
                </div>
                <div>
                  <h4 class="text-lg font-semibold mb-3 text-purple-400">Platform Handles (Everything Else)</h4>
                  <ul class="text-slate-400 space-y-2">
                    <li>• Authentication & Authorization</li>
                    <li>• Distributed tracing</li>
                    <li>• Error handling & retries</li>
                    <li>• Event emission & delivery</li>
                    <li>• Database transactions</li>
                    <li>• Scaling & load balancing</li>
                  </ul>
                </div>
              </div>
            </div>

            <div class="bg-slate-900 rounded-lg p-8">
              <h3 class="text-2xl font-semibold mb-4 text-green-400">Service Communication</h3>
              <div class="grid md:grid-cols-2 gap-8">
                <div>
                  <h4 class="text-lg font-semibold mb-3 text-blue-400">Event-Driven Messaging</h4>
                  <p class="text-slate-300 mb-4">
                    Contexts communicate only through events. No direct calls, no shared databases, no coupling.
                  </p>
                  <div class="bg-slate-800 rounded p-4">
                    <code class="text-green-400 text-sm">
                      UserRegistered → BillingContext<br/>
                      OrderPlaced → InventoryContext<br/>
                      PaymentProcessed → OrderContext
                    </code>
                  </div>
                </div>
                <div>
                  <h4 class="text-lg font-semibold mb-3 text-purple-400">Guaranteed Delivery</h4>
                  <p class="text-slate-300 mb-4">
                    The platform ensures events are delivered reliably, in order, with exactly-once semantics.
                  </p>
                  <ul class="text-slate-400 space-y-2">
                    <li>• Automatic retries</li>
                    <li>• Dead letter queues</li>
                    <li>• Ordering guarantees</li>
                    <li>• Duplicate detection</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- Event-Driven Architecture -->
        <section class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-yellow-400">Event-Driven Architecture</h2>
          <div class="bg-slate-900 rounded-lg p-8">
            <div class="grid md:grid-cols-2 gap-8 mb-8">
              <div>
                <h3 class="text-xl font-semibold mb-4 text-yellow-400">Event Sourcing</h3>
                <p class="text-slate-300 mb-4">
                  Every change is captured as an immutable event. The system state is derived from the event stream.
                </p>
                <div class="bg-slate-800 rounded p-4">
                  <code class="text-green-400 text-sm">
                    UserRegistered &#123; email, timestamp &#125;<br/>
                    ProfileUpdated &#123; userId, changes &#125;<br/>
                    AccountDeactivated &#123; userId, reason &#125;
                  </code>
                </div>
              </div>
              <div>
                <h3 class="text-xl font-semibold mb-4 text-blue-400">Event Replay</h3>
                <p class="text-slate-300 mb-4">
                  Recreate any system state by replaying events. Perfect for debugging, testing, and recovery.
                </p>
                <ul class="text-slate-400 space-y-2">
                  <li>• Time-travel debugging</li>
                  <li>• Point-in-time recovery</li>
                  <li>• Audit trails</li>
                  <li>• A/B testing</li>
                </ul>
              </div>
            </div>

            <div class="border-t border-slate-700 pt-8">
              <h3 class="text-xl font-semibold mb-4 text-purple-400">Event Processing</h3>
              <div class="grid md:grid-cols-3 gap-6">
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-green-400">Real-time</h4>
                  <p class="text-slate-400 text-sm">
                    Events processed as they occur for immediate consistency
                  </p>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-blue-400">Batch</h4>
                  <p class="text-slate-400 text-sm">
                    Events processed in batches for analytics and reporting
                  </p>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-yellow-400">Stream</h4>
                  <p class="text-slate-400 text-sm">
                    Continuous event streams for complex event processing
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- Pattern Library -->
        <section class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-green-400">Pattern Library</h2>
          <div class="space-y-6">
            <div class="bg-slate-900 rounded-lg p-8">
              <h3 class="text-2xl font-semibold mb-4 text-green-400">Pre-built Contexts</h3>
              <p class="text-slate-300 text-lg mb-6">
                Common business domains implemented as ready-to-use bounded contexts. Drop them into any project.
              </p>
              <div class="grid md:grid-cols-3 gap-6">
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-blue-400">User Management</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    Authentication, authorization, profiles, preferences
                  </p>
                  <div class="text-xs text-slate-500">
                    JWT, OAuth, RBAC, MFA
                  </div>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-purple-400">Billing & Payments</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    Subscriptions, invoicing, payment processing
                  </p>
                  <div class="text-xs text-slate-500">
                    Stripe, recurring billing, taxes
                  </div>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-yellow-400">Communications</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    Email, SMS, push notifications, templates
                  </p>
                  <div class="text-xs text-slate-500">
                    Multi-channel, templates, tracking
                  </div>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-pink-400">File Management</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    Upload, storage, processing, CDN
                  </p>
                  <div class="text-xs text-slate-500">
                    S3, CloudFront, image processing
                  </div>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-green-400">Analytics</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    Event tracking, metrics, dashboards
                  </p>
                  <div class="text-xs text-slate-500">
                    Real-time analytics, reports
                  </div>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-red-400">Admin Interface</h4>
                  <p class="text-slate-400 text-sm mb-3">
                    CRUD operations, user management
                  </p>
                  <div class="text-xs text-slate-500">
                    Auto-generated, customizable
                  </div>
                </div>
              </div>
            </div>

            <div class="bg-slate-900 rounded-lg p-8">
              <h3 class="text-2xl font-semibold mb-4 text-blue-400">Custom Patterns</h3>
              <p class="text-slate-300 mb-6">
                Build your own bounded context patterns that can be reused across projects and teams.
              </p>
              <div class="grid md:grid-cols-2 gap-6">
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-purple-400">Pattern Templates</h4>
                  <p class="text-slate-400 text-sm">
                    Define context structure, events, and behavior patterns for reuse
                  </p>
                </div>
                <div class="bg-slate-800 rounded-lg p-4">
                  <h4 class="font-semibold mb-2 text-yellow-400">Organization Library</h4>
                  <p class="text-slate-400 text-sm">
                    Share patterns across teams and projects within your organization
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- Integration -->
        <section class="mb-16">
          <h2 class="text-3xl font-bold mb-8 text-red-400">Legacy System Integration</h2>
          <div class="bg-slate-900 rounded-lg p-8">
            <div class="grid md:grid-cols-2 gap-8">
              <div>
                <h3 class="text-xl font-semibold mb-4 text-red-400">Gradual Migration</h3>
                <p class="text-slate-300 mb-4">
                  Greenfield Platform works alongside existing systems. No big bang migrations, no rewrites.
                </p>
                <ul class="text-slate-400 space-y-2">
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">•</span>
                    <span>Database integration adapters</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">•</span>
                    <span>API gateway patterns</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">•</span>
                    <span>Event bridge connectors</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">•</span>
                    <span>Legacy system wrappers</span>
                  </li>
                </ul>
              </div>
              <div>
                <h3 class="text-xl font-semibold mb-4 text-orange-400">Zero Downtime</h3>
                <p class="text-slate-300 mb-4">
                  Critical systems keep running while new bounded contexts gradually take over functionality.
                </p>
                <div class="bg-slate-800 rounded p-4">
                  <div class="text-slate-400 text-sm space-y-1">
                    <div>1. New context handles new features</div>
                    <div>2. Events bridge old and new systems</div>
                    <div>3. Gradually migrate existing data</div>
                    <div>4. Sunset legacy components safely</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- CTA Section -->
        <section class="text-center">
          <div class="bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg p-8">
            <h2 class="text-2xl font-bold mb-4">Ready to Experience the Platform?</h2>
            <p class="text-lg mb-6 opacity-90">
              Get started with our 60-second quickstart and build your first bounded context.
            </p>
            <div class="space-x-4">
              <a href="/start" class="inline-block bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-slate-100 transition-colors">
                Get Started
              </a>
              <a href="/proof" class="inline-block border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-purple-600 transition-colors">
                See Results
              </a>
            </div>
          </div>
        </section>
      </div>
    </div>
  </div>
</Layout>